use assist/maths
use convert_expression/types
use aiken/hash

test list_power_mod_good() {
  let l =
    [91, 499319296258426758, 371533020831606146, 637880808202577067]
  let r =
    [1508733114072609971, 11220000091]
  let left = maths.list_powmod(l, types.g, types.q)
  let right = maths.list_powmod(r, types.g, types.q)
  left == right
}

test list_power_mod_short() {
  let l =
    [91]
  let r =
    [91]
  let left = maths.list_powmod(l, types.g, types.q)
  let right = maths.list_powmod(r, types.g, types.q)
  left == right
}

test list_power_mod_long() {
  let l =
    [
      499319296258426758, 371533020831606146, 637880808202577067,
      250602099261951288, 233848391693077322, 710501442004688010,
    ]
  let r =
    [
      499319296258426758, 371533020831606146, 637880808202577067,
      250602099261951288, 233848391693077322, 710501442004688010,
    ]
  let left = maths.list_powmod(l, types.g, types.q)
  let right = maths.list_powmod(r, types.g, types.q)
  left == right
}

test list_power_mod_huge2() {
  let l = [18439798819756280717056566219640190442, 6799354086608106712204873374823102223, 1718994596892442620867945799657526849, 334772918440990285090008916832620440, 74872924849314465403941849900287626657]
  let r = [18439798819756280717056566219640190442, 6799354086608106712204873374823102223, 1718994596892442620867945799657526849, 334772918440990285090008916832620440, 74872924849314465403941849900287626657]
  let left = maths.list_powmod(l, types.g, types.q)
  let right = maths.list_powmod(r, types.g, types.q)
  left == right
}

test list_power_mod_huge2() {
  let l =
    [
      76473943441582163276558345207427616597227851226562012967243598534331108562680,43700031778125639499452922204966331993903532040719594710080474719784545799826,67468183781042766720815640945336147377674444140764387060558790344494091614691,61337883715733636909381732115800930020638849595830188639514535391417708702468,18028210143437048445108588621091919407764118428728776140521327144506541786436
    ]
  let r =
    [
      76473943441582163276558345207427616597227851226562012967243598534331108562680,43700031778125639499452922204966331993903532040719594710080474719784545799826,67468183781042766720815640945336147377674444140764387060558790344494091614691,61337883715733636909381732115800930020638849595830188639514535391417708702468,18028210143437048445108588621091919407764118428728776140521327144506541786436
    ]
  let left = maths.list_powmod(l, types.g, types.q)
  let right = maths.list_powmod(r, types.g, types.q)
  left == right
}


test small_hex_string_to_int() {
  let n = #"acab"
  maths.to_int(n) > 0
}

test moderate_hex_string_to_int() {
  let n = #"acabbeefface"
  maths.to_int(n) > 0
}


test large_hex_string_to_int() {
  let n = #"acabbeeffacecafefadeba5eba11f005"
  maths.to_int(n) > 0
}

test full_hex_string_to_int1() {
  let n = hash.sha3_256(#"acab")
  maths.to_int(n) > 0
}

test full_hex_string_to_int2() {
  let n = hash.sha3_256(#"acabbeefface")
  maths.to_int(n) > 0
}